# Terraform Variables Configuration Example
#
# This file serves as a template for configuring the Databricks infrastructure.
# Copy this file to 'terraform.tfvars' and update the values according to your
# specific Databricks workspace and requirements.
#
# IMPORTANT: Never commit the actual terraform.tfvars file to version control
# as it contains sensitive information like tokens and credentials.
#
# Configuration sections:
# 1. Databricks connectivity - workspace URL and authentication
# 2. Resource configuration - names and identifiers for Databricks objects
# 3. Project settings - environment and organizational metadata
# 4. AWS settings - region and profile configuration
# 5. Optional settings - validation flags and resource tags

# Example Terraform variables file
# Copy this to terraform.tfvars and fill in your actual values

# Databricks connectivity
databricks_host  = "https://your-workspace.cloud.databricks.com"
databricks_token = "your-databricks-token-here"

# Resource configuration
catalog_name              = "hive_metastore"  # Use "hive_metastore" for trial accounts
schema_name              = "country_currency_schema"
table_name               = "country_currency_mapping"
volume_name              = "csv_data_volume"
databricks_warehouse_id  = "your-warehouse-id-here"

# Project configuration
environment  = "dev"
project_name = "country-currency-mapping"
app_name     = "country-currency-app"

# Optional: Skip validation for existing resources
skip_validation = false

# Optional: Tags for resource management
tags = {
  "owner"       = "your-name"
  "cost-center" = "your-department"
}

# AWS Configuration
aws_region = "us-east-1"  # AWS region for infrastructure
# aws_profile = "default"  # Uncomment and set if using specific AWS CLI profile
