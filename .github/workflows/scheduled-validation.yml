name: 'Scheduled Infrastructure Health Check'

on:
  schedule:
    - cron: '0 8 * * MON-FRI'  # Weekdays at 8 AM UTC
  workflow_dispatch:

# Required for OIDC
permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

jobs:
  health-check:
    name: 'Infrastructure Health Check'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [dev, staging, prod]
        include:
          - environment: dev
            aws_region: eu-central-1
          - environment: staging
            aws_region: eu-central-1
          - environment: prod
            aws_region: eu-central-1
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials using OIDC
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets[format('AWS_ROLE_ARN_{0}', upper(matrix.environment))] }}
        role-session-name: GitHubActions-HealthCheck-${{ matrix.environment }}-${{ github.run_id }}
        aws-region: ${{ matrix.aws_region }}

    - name: Create Minimal Vars File
      run: |
        # Create basic vars file for health check
        cat > terraform/${{ matrix.environment }}-env/terraform.tfvars << EOF
        databricks_host = "${{ secrets[format('DATABRICKS_HOST_{0}', upper(matrix.environment))] }}"
        databricks_token = "${{ secrets[format('DATABRICKS_TOKEN_{0}', upper(matrix.environment))] }}"
        aws_region = "${{ matrix.aws_region }}"
        environment = "${{ matrix.environment }}"
        EOF

    - name: Run Health Check
      shell: pwsh
      run: |
        Write-Host "🏥 Running health check for ${{ matrix.environment }} environment..." -ForegroundColor Yellow
        
        try {
          $result = ./scripts/validate.ps1 -Environment ${{ matrix.environment }} -CheckData
          
          if ($LASTEXITCODE -ne 0) {
            Write-Error "Health check failed for ${{ matrix.environment }} environment"
            exit 1
          }
          
          Write-Host "✅ Health check passed for ${{ matrix.environment }}!" -ForegroundColor Green
        }
        catch {
          Write-Error "Health check error for ${{ matrix.environment }}: $($_.Exception.Message)"
          exit 1
        }

    - name: Report Results
      if: failure()
      uses: 8398a7/action-slack@v3
      with:
        status: failure
        text: |
          🚨 **Health Check Failed**
          - Environment: ${{ matrix.environment }}
          - Time: $(date)
          - Check logs: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}